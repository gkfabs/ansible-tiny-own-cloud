diff -bur /usr/share/php/Sabre/DAV/XMLUtil.php Sabre/DAV/XMLUtil.php
--- /usr/share/php/Sabre/DAV/XMLUtil.php	2015-01-21 16:01:09.000000000 -0500
+++ Sabre/DAV/XMLUtil.php	2023-11-14 03:43:15.414274300 -0500
@@ -115,7 +115,7 @@
         $oldErrorSetting =  libxml_use_internal_errors(true);
         // Fixes an XXE vulnerability on PHP versions older than 5.3.23 or
         // 5.4.13.
-        $oldEntityLoaderSetting = libxml_disable_entity_loader(true);
+        //$oldEntityLoaderSetting = libxml_disable_entity_loader(true);
 
         // Clearing any previous errors
         libxml_clear_errors();
@@ -134,7 +134,7 @@
 
         // Restoring old mechanism for error handling
         if ($oldErrorSetting===false) libxml_use_internal_errors(false);
-        if ($oldEntityLoaderSetting===false) libxml_disable_entity_loader(false);
+        //if ($oldEntityLoaderSetting===false) libxml_disable_entity_loader(false);
 
         return $dom;
 
diff -bur /usr/share/php/Sabre/DAVACL/AbstractPrincipalCollection.php Sabre/DAVACL/AbstractPrincipalCollection.php
--- /usr/share/php/Sabre/DAVACL/AbstractPrincipalCollection.php	2015-01-21 16:01:09.000000000 -0500
+++ Sabre/DAVACL/AbstractPrincipalCollection.php	2023-11-14 03:43:15.414274300 -0500
@@ -15,6 +15,7 @@
  * @author Evert Pot (http://evertpot.com/)
  * @license http://sabre.io/license/ Modified BSD License
  */
+#[\AllowDynamicProperties]
 abstract class AbstractPrincipalCollection extends DAV\Collection implements IPrincipalCollection {
 
     /**
diff -bur /usr/share/php/Sabre/HTTP/DigestAuth.php Sabre/HTTP/DigestAuth.php
--- /usr/share/php/Sabre/HTTP/DigestAuth.php	2021-11-26 07:16:09.000000000 -0500
+++ Sabre/HTTP/DigestAuth.php	2023-11-14 03:43:15.418274330 -0500
@@ -228,6 +228,7 @@
      * @return mixed
      */
     protected function parseDigest($digest) {
+        if ($digest == null) return false;
 
         // protect against missing data
         $needed_parts = array('nonce'=>1, 'nc'=>1, 'cnonce'=>1, 'qop'=>1, 'username'=>1, 'uri'=>1, 'response'=>1);
diff -bur /usr/share/php/Sabre/VObject/Document.php Sabre/VObject/Document.php
--- /usr/share/php/Sabre/VObject/Document.php	2015-01-21 15:57:59.000000000 -0500
+++ Sabre/VObject/Document.php	2023-11-14 03:43:15.382274066 -0500
@@ -48,9 +48,9 @@
         $args = func_get_args();
         if (count($args)===0 || is_array($args[0])) {
             array_unshift($args, static::$defaultName);
-            call_user_func_array(array('parent', '__construct'), $args);
+            call_user_func_array(parent::class . '::__construct', $args);
         } else {
-            call_user_func_array(array('parent', '__construct'), $args);
+            call_user_func_array(parent::class . '::__construct', $args);
         }
 
     }
diff -bur /usr/share/php/Sabre/VObject/ElementList.php Sabre/VObject/ElementList.php
--- /usr/share/php/Sabre/VObject/ElementList.php	2015-01-21 15:57:59.000000000 -0500
+++ Sabre/VObject/ElementList.php	2023-11-14 03:43:15.382274066 -0500
@@ -46,6 +46,7 @@
      *
      * @return Element
      */
+    #[\ReturnTypeWillChange]
     public function current() {
 
         return $this->elements[$this->key];
@@ -57,6 +58,7 @@
      *
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function next() {
 
         $this->key++;
@@ -68,6 +70,7 @@
      *
      * @return int
      */
+    #[\ReturnTypeWillChange]
     public function key() {
 
         return $this->key;
@@ -79,6 +82,7 @@
      *
      * @return bool
      */
+    #[\ReturnTypeWillChange]
     public function valid() {
 
         return isset($this->elements[$this->key]);
@@ -90,6 +94,7 @@
      *
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function rewind() {
 
         $this->key = 0;
@@ -105,6 +110,7 @@
      *
      * @return int
      */
+    #[\ReturnTypeWillChange]
     public function count() {
 
         return count($this->elements);
@@ -122,6 +128,7 @@
      * @param int $offset
      * @return bool
      */
+    #[\ReturnTypeWillChange]
     public function offsetExists($offset) {
 
         return isset($this->elements[$offset]);
@@ -134,6 +141,7 @@
      * @param int $offset
      * @return mixed
      */
+    #[\ReturnTypeWillChange]
     public function offsetGet($offset) {
 
         return $this->elements[$offset];
@@ -147,6 +155,7 @@
      * @param mixed $value
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function offsetSet($offset,$value) {
 
         throw new \LogicException('You can not add new objects to an ElementList');
@@ -161,6 +170,7 @@
      * @param int $offset
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function offsetUnset($offset) {
 
         throw new \LogicException('You can not remove objects from an ElementList');
diff -bur /usr/share/php/Sabre/VObject/Node.php Sabre/VObject/Node.php
--- /usr/share/php/Sabre/VObject/Node.php	2015-01-21 15:57:59.000000000 -0500
+++ Sabre/VObject/Node.php	2023-11-14 03:43:15.386274096 -0500
@@ -67,6 +67,7 @@
      *
      * @return ElementList
      */
+    #[\ReturnTypeWillChange]
     public function getIterator() {
 
         if (!is_null($this->iterator))
@@ -99,6 +100,7 @@
      *
      * @return int
      */
+    #[\ReturnTypeWillChange]
     public function count() {
 
         $it = $this->getIterator();
@@ -119,6 +121,7 @@
      * @param int $offset
      * @return bool
      */
+    #[\ReturnTypeWillChange]
     public function offsetExists($offset) {
 
         $iterator = $this->getIterator();
@@ -134,6 +137,7 @@
      * @param int $offset
      * @return mixed
      */
+    #[\ReturnTypeWillChange]
     public function offsetGet($offset) {
 
         $iterator = $this->getIterator();
@@ -150,6 +154,7 @@
      * @param mixed $value
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function offsetSet($offset,$value) {
 
         $iterator = $this->getIterator();
@@ -170,6 +175,7 @@
      * @param int $offset
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function offsetUnset($offset) {
 
         $iterator = $this->getIterator();
diff -bur /usr/share/php/Sabre/VObject/RecurrenceIterator.php Sabre/VObject/RecurrenceIterator.php
--- /usr/share/php/Sabre/VObject/RecurrenceIterator.php	2015-01-21 15:57:59.000000000 -0500
+++ Sabre/VObject/RecurrenceIterator.php	2023-11-14 03:43:15.386274096 -0500
@@ -472,6 +472,7 @@
      *
      * @return DateTime
      */
+    #[\ReturnTypeWillChange]
     public function current() {
 
         if (!$this->valid()) return null;
@@ -545,6 +546,7 @@
      *
      * @return int
      */
+    #[\ReturnTypeWillChange]
     public function key() {
 
         return $this->counter;
@@ -556,6 +558,7 @@
      *
      * @return bool
      */
+    #[\ReturnTypeWillChange]
     public function valid() {
 
         if (!is_null($this->count)) {
@@ -583,6 +586,7 @@
      *
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function rewind() {
 
         $this->currentDate = clone $this->startDate;
@@ -625,6 +629,7 @@
      *
      * @return void
      */
+    #[\ReturnTypeWillChange]
     public function next() {
 
         $previousStamp = $this->currentDate->getTimeStamp();
